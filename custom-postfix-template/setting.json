{
  "custom-postfix-completion": {
    "languageTemplates": {
      "java": {
        "templates": [
          {
            "triggerWord": "sout",
            "description": "System.out.println",
            "targetRegExp": "[^\\t]+",
            "body": [
              "System.out.println(${target});",
              ""
            ]
          },
          {
            "triggerWord": "jdebugMH",
            "description": "",
            "targetRegExp": "[^\\t]+",
            "body": [
              "log.debug(Gsons.toJson(${target}));",
              ""
            ]
          },
          {
            "triggerWord": "jinfoMH",
            "description": "MH",
            "targetRegExp": "[^\\t]+",
            "body": [
              "log.info(Gsons.toJson(${target}));",
              ""
            ]
          },
          {
            "triggerWord": "jwarnMH",
            "description": "MH",
            "targetRegExp": "[^\\t]+",
            "body": [
              "log.warn(Gsons.toJson(${target}));",
              ""
            ]
          },
          {
            "triggerWord": "jerrMH",
            "description": "MH",
            "targetRegExp": "[^\\t]+",
            "body": [
              "log.error(Gsons.toJson(${target}));",
              ""
            ]
          },
          {
            "triggerWord": "jdebugD",
            "description": "D",
            "targetRegExp": "[^\\t]+",
            "body": [
              "log.debug(GsonUtil.toJson(${target}));",
              ""
            ]
          },
          {
            "triggerWord": "jinfoD",
            "description": "D",
            "targetRegExp": "[^\\t]+",
            "body": [
              "log.info(GsonUtil.toJson(${target}));",
              ""
            ]
          },
          {
            "triggerWord": "jwarnD",
            "description": "D",
            "targetRegExp": "[^\\t]+",
            "body": [
              "log.warn(GsonUtil.toJson(${target}));",
              ""
            ]
          },
          {
            "triggerWord": "jerrD",
            "description": "D",
            "targetRegExp": "[^\\t]+",
            "body": [
              "log.error(GsonUtil.toJson(${target}));",
              ""
            ]
          },
          {
            "triggerWord": "isTrueOr",
            "description": "Assertions.isTrue",
            "targetRegExp": "[^\\t]+",
            "body": [
              "Assertions.isTrue(${target}).orThrow();",
              ""
            ]
          },
          {
            "triggerWord": "isFalseOr",
            "description": "Assertions.isFalse",
            "targetRegExp": "[^\\t]+",
            "body": [
              "Assertions.isFalse(${target}).orThrow();",
              ""
            ]
          },
          {
            "triggerWord": "isNullOr",
            "description": "Assertions.isNull",
            "targetRegExp": "[^\\t]+",
            "body": [
              "Assertions.isNull(${target}).orThrow();",
              ""
            ]
          },
          {
            "triggerWord": "nonNullOr",
            "description": "Assertions.nonNull",
            "targetRegExp": "[^\\t]+",
            "body": [
              "Assertions.nonNull(${target}).orThrow();",
              ""
            ]
          },
          // isEqualsOr
          {
            "triggerWord": "isEqualsOr",
            "description": "Assertions.isEquals",
            "targetRegExp": "[^\\t]+",
            "body": [
              "Assertions.isEquals(${target}).orThrow();",
              ""
            ]
          },
          // isNotEqualsOr
          {
            "triggerWord": "isNotEqualsOr",
            "description": "Assertions.isNotEquals",
            "targetRegExp": "[^\\t]+",
            "body": [
              "Assertions.isNotEquals(${target}).orThrow();",
              ""
            ]
          },
          {
            "triggerWord": "isEmptyOr",
            "description": "Assertions.isEmpty",
            "targetRegExp": "[^\\t]+",
            "body": [
              "Assertions.isEmpty(${target}).orThrow();",
              ""
            ]
          },
          {
            "triggerWord": "isNotEmptyOr",
            "description": "Assertions.isNotEmpty",
            "targetRegExp": "[^\\t]+",
            "body": [
              "Assertions.isNotEmpty(${target}).orThrow();",
              ""
            ]
          },
          {
            "triggerWord": "isBlankOr",
            "description": "Assertions.isBlank",
            "targetRegExp": "[^\\t]+",
            "body": [
              "Assertions.isBlank(${target}).orThrow();",
              ""
            ]
          },
          {
            "triggerWord": "isNotBlankOr",
            "description": "Assertions.isNotBlank",
            "targetRegExp": "[^\\t]+",
            "body": [
              "Assertions.isNotBlank(${target}).orThrow();",
              ""
            ]
          },
          {
            "triggerWord": "in",
            "description": "Assertions.in",
            "targetRegExp": "[^\\t]+",
            "body": [
              "Objects.isNull(${target})",
              ""
            ]
          },
          {
            "triggerWord": "nn",
            "description": "Objects.nonNull",
            "targetRegExp": "[^\\t]+",
            "body": [
              "Objects.nonNull(${target})",
              ""
            ]
          },
          {
            "triggerWord": "ib",
            "description": "StringUtils.isBlank",
            "targetRegExp": "[^\\t]+",
            "body": [
              "StringUtils.isBlank(${target})",
              ""
            ]
          },
          {
            "triggerWord": "inb",
            "description": "StringUtils.isNotBlank",
            "targetRegExp": "[^\\t]+",
            "body": [
              "StringUtils.isNotBlank(${target})",
              ""
            ]
          },
          {
            "triggerWord": "ie",
            "description": "CollectionUtils.isEmpty",
            "targetRegExp": "[^\\t]+",
            "body": [
              "CollectionUtils.isEmpty(${target})",
              ""
            ]
          },
          {
            "triggerWord": "ine",
            "description": "CollectionUtils.isNotEmpty",
            "targetRegExp": "[^\\t]+",
            "body": [
              "CollectionUtils.isNotEmpty(${target})",
              ""
            ]
          }
        ]
      }
    }
  }
}